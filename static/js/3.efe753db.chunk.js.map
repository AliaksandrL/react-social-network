{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","reverse","p","id","postsBlock","AddNewPostReduxForm","values","addPost","newPostText","Field","name","component","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,MAAQ,2BAA2B,iBAAmB,sCAAsC,UAAY,+BAA+B,QAAU,+B,oBCA1MD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,qJC4CVC,EA3CgB,SAACC,GAE5B,MAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASD,EAAMI,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,iCACMF,GACF,gCACI,yCAAe,sBAAMK,QAjBR,WACrBJ,GAAY,IAgBW,SAAkCH,EAAMI,QAAU,iBAGpEF,GACD,8BACI,uBAAOM,SAbI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAaXC,WAAW,EACXC,OApBQ,WACvBV,GAAY,GACZH,EAAMc,aAAaV,IAmBJO,MAAOP,U,kCCUfW,EAFkBC,YAAU,CAACC,KAAM,gBAAjBD,EArCT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC7C,OACI,uBAAMC,SAAUH,EAAhB,UACI,8BACI,4CAEHE,GAAS,qBAAKE,UAAWC,IAAMC,iBAAtB,SACLJ,IAEL,gCACI,0CADJ,IAEKK,YAAY,YAAa,WAAY,GAAIC,QAE9C,gCACI,kDADJ,IAEKD,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAACC,KAAM,gBAGzD,gCACI,uDADJ,IAEKF,YAAY,yBAA0B,4BAA6B,GAAIG,QAE5E,gCACI,yCADJ,IAEKH,YAAY,WAAY,UAAW,GAAIG,QAE5C,gCACI,yCADJ,KACsBC,OAAOC,KAAKX,EAAQY,UAAUC,KAAI,SAAAC,GACpD,OAAO,qBAAeX,UAAWY,IAAEC,QAA5B,SACH,8BAAIF,EAAJ,KAAWR,YAAYQ,EAAK,YAAcA,EAAK,GAAIP,SADtCO,eCW3BG,EAAc,SAAC,GAAsC,IAArCjB,EAAoC,EAApCA,QAASkB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACpC,OAAO,gCACFD,GAAW,8BACR,wBAAQ9B,QAAS+B,EAAjB,oBAEJ,gCACI,0CADJ,KACuBnB,EAAQoB,YAE/B,gCACI,kDADJ,KAC+BpB,EAAQqB,eAAiB,MAAQ,QAE/DrB,EAAQqB,gBACT,gCACI,uDADJ,KACoCrB,EAAQsB,6BAG5C,gCACI,yCADJ,KACsBtB,EAAQuB,WAK9B,gCACI,yCADJ,KACsBb,OAAOC,KAAKX,EAAQY,UAAUC,KAAI,SAAAC,GACpD,OAAO,cAAC,EAAD,CAAmBU,aAAcV,EAAKW,aAAczB,EAAQY,SAASE,IAAvDA,aAM3BY,EAAU,SAAC,GAAkC,IAAjCF,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,sBAAKtB,UAAWY,IAAEC,QAAlB,UAA2B,4BAAIQ,IAA/B,KAAmDC,MAG/CE,EAxEK,SAAC,GAAsE,IAArE3B,EAAoE,EAApEA,QAASf,EAA2D,EAA3DA,OAAQU,EAAmD,EAAnDA,aAAcuB,EAAqC,EAArCA,QAASU,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAErE,EAA8B/C,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KAEA,IAAKgB,EACD,OAAO,cAAC8B,EAAA,EAAD,IAgBX,OACI,8BACI,sBAAK3B,UAAWY,IAAEgB,iBAAlB,UACI,qBAAKC,IAAKhC,EAAQiC,OAAOC,OAASC,IAAWhC,UAAWY,IAAEqB,YACzDlB,GAAW,uBAAOV,KAAM,OAAQnB,SAjBjB,SAACC,GACrBA,EAAE+C,OAAOC,MAAMC,QACfX,EAAUtC,EAAE+C,OAAOC,MAAM,OAiBpBvD,EACK,cAAC,EAAD,CAAiByD,cAAexC,EAASA,QAASA,EAASE,SAd5D,SAACuC,GACdZ,EAAYY,GACPC,MAAK,WACF1D,GAAY,SAYN,cAAC,EAAD,CAAamC,aAAc,WACzBnC,GAAY,IACbgB,QAASA,EAASkB,QAASA,IAClC,cAAC,EAAD,CAAwBjC,OAAQA,EAAQU,aAAcA,U,oDCzBvDgD,EAZF,SAAC9D,GACZ,OACE,sBAAKsB,UAAWY,IAAE6B,KAAlB,UACE,qBAAKZ,IAAI,0EACPnD,EAAMgE,QACR,gCACE,wCAAmBhE,EAAMiE,kB,gBCF3BC,EAAcC,YAAiB,IAE/BC,EAAUC,IAAMC,MAAK,SAAAtE,GACvB,IAAIuE,EACA,YAAIvE,EAAMwE,OACLC,UACAzC,KAAI,SAAC0C,GAAD,OACT,cAAC,EAAD,CAAiBV,QAASU,EAAEV,QAASC,WAAYS,EAAET,YAAxCS,EAAEC,OASjB,OACI,sBAAKrD,UAAWY,IAAE0C,WAAlB,UACI,0CACA,cAACC,EAAD,CAAqBxD,SAPb,SAACyD,GACb9E,EAAM+E,QAAQD,EAAOE,gBAOjB,qBAAK1D,UAAWY,IAAEsC,MAAlB,SAA0BD,UAmBhCM,EAAsB7D,YAAU,CAACC,KAAM,yBAAjBD,EAdL,SAAChB,GACpB,OACI,uBAAMqB,SAAUrB,EAAMkB,aAAtB,UACI,8BACI,cAAC+D,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWvD,IAC9BwD,SAAU,CAACC,IAAUnB,OAEhC,8BACI,sDAQDE,I,QCFAkB,EAFUC,aAdH,SAACC,GACnB,MAAO,CACHhB,MAAOgB,EAAMC,YAAYjB,MACzBQ,YAAaQ,EAAMC,YAAYT,gBAGd,SAACU,GACtB,MAAO,CACHX,QAAS,SAACC,GACNU,EAASC,YAAqBX,QAKjBO,CAA6CnB,GC1BvDwB,EAdC,SAAC,GAAsE,IAArE7C,EAAoE,EAApEA,UAAWV,EAAyD,EAAzDA,QAASlB,EAAgD,EAAhDA,QAASf,EAAuC,EAAvCA,OAAQ4C,EAA+B,EAA/BA,YAAalC,EAAkB,EAAlBA,aAChE,OACI,gCACI,cAAC,EAAD,CAAaiC,UAAWA,EACXV,QAASA,EACTlB,QAASA,EACTf,OAAQA,EACR4C,YAAaA,EACblC,aAAcA,IAC3B,cAAC,EAAD,Q,gBCLN+E,E,oKAEF,WACI,IAAIC,EAASC,KAAK/F,MAAMgG,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAK/F,MAAMkG,mBAEhBH,KAAK/F,MAAMmG,QAAQC,KAAK,UAGhCL,KAAK/F,MAAMqG,gBAAgBP,GAC3BC,KAAK/F,MAAMsG,UAAUR,K,+BAGzB,WACIC,KAAKQ,mB,gCAGT,SAAmBC,EAAWC,EAAWC,GACjCX,KAAK/F,MAAMgG,MAAMC,OAAOH,QAAUU,EAAUR,MAAMC,OAAOH,QACzDC,KAAKQ,mB,oBAIb,WAEI,OACI,8BACI,cAAC,EAAD,2BAAaR,KAAK/F,OAAlB,IACSqC,SAAU0D,KAAK/F,MAAMgG,MAAMC,OAAOH,OAClC3E,QAAS4E,KAAK/F,MAAMmB,QACpBf,OAAQ2F,KAAK/F,MAAMI,OACnBU,aAAciF,KAAK/F,MAAMc,aACzBiC,UAAWgD,KAAK/F,MAAM+C,mB,GAjChBsB,IAAMsC,WA+CtBC,sBACXrB,aARkB,SAACC,GAAD,MAAY,CAC9BrE,QAASqE,EAAMC,YAAYtE,QAC3Bf,OAAQoF,EAAMC,YAAYrF,OAC1B8F,iBAAkBV,EAAMqB,KAAKf,OAC7BgB,OAAQtB,EAAMqB,KAAKC,UAIM,CAACT,oBAAiBC,cAAWxF,iBAAciC,cAAWC,kBAC/E+D,IAFWH,CAGbf","file":"static/js/3.efe753db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__261EN\",\"first\":\"ProfileInfo_first__bXVXf\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2OC3T\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1KNr_\",\"contact\":\"ProfileInfo_contact__y1ug9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2XfIq\",\"posts\":\"MyPosts_posts__3Pigc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1-Dp7\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onClick={activateEditMode}>{props.status || \"NO STATUS\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"./../../common/FormsControls/FormsControls.module.css\"\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>:\r\n                {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/face-heroes.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        {/*<div>*/}\r\n        {/*    /!*<b>Contacts</b>: {profile.contacts}*!/*/}\r\n        {/*</div>*/}\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://pbs.twimg.com/profile_images/1173161429266030592/lJCNA_JC.jpg\" />\r\n      { props.message }\r\n      <div>\r\n        <span>Like</span>{ props.likesCount }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map((p) => (\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount}/>\r\n    ));\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());\r\n//                     };\r\n//\r\n//                     let onPostChange = (text) => {\r\n//                         let action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     };\r\n//                     return <MyPosts updateNewPostText={onPostChange}\r\n//                                     addPost={addPost}\r\n//                                     posts={state.profilePage.posts}\r\n//                                     newPostText={state.profilePage.newPostText}/>\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// };\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({savePhoto, isOwner, profile, status, saveProfile, updateStatus}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={savePhoto}\r\n                         isOwner={isOwner}\r\n                         profile={profile}\r\n                         status={status}\r\n                         saveProfile={saveProfile}\r\n                         updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUsersProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"render\")\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n//\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps, {getUsersProfile})(WithUrlDataContainerComponent);\r\n"],"sourceRoot":""}