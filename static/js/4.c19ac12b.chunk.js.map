{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","AddMessageFormRedux","reduxForm","form","Dialogs","state","messagesPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","DialogsContainer","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCYpMC,EATI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCCjBC,EALC,SAACT,GACf,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,yCCApCC,EAAcC,YAAiB,IAExBC,EAAiB,SAACb,GAG3B,OACI,uBAAMc,SAAUd,EAAMe,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUT,GACrBH,KAAK,iBACLa,YAAY,yBAEvB,8BACI,oDCiBVC,GDXsBC,YAAU,CAACC,KAAM,wBAAjBD,CAA0CV,GCW1CU,YAAU,CAACC,KAAM,wBAAjBD,CAA0CV,IAEvDY,EA9BC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,aAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACpC,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBN,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAEjC8B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACtC,cAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAEhC,OAQxC,OAAqB,IAAjBF,EAAMmC,OAAyB,cAAC,IAAD,CAAU5B,GAAI,WAG7C,sBAAKJ,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAEgC,aAAlB,SAAiCR,IACjC,qBAAKzB,UAAWC,IAAE6B,SAAlB,SACI,8BAAMD,MAEV,cAAC,EAAD,CAAqBlB,SAZT,SAACuB,GACjBrC,EAAMsC,YAAYD,EAAOE,uB,+CChB7BC,EAA6B,SAACd,GAAD,MAAY,CACzCS,OAAQT,EAAMe,KAAKN,S,QCkBjBO,EAAmBC,YAAQC,aAbX,SAAClB,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAGH,SAACkB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDVR,SAACQ,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKjD,MAAMmC,OACT,cAACY,EAAD,eAAeE,KAAKjD,QADI,cAAC,IAAD,CAAUO,GAAG,eAJT,GAEX2C,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCMpDL,CACHlB,GAEPiB","file":"static/js/4.c19ac12b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2JXDj\",\"dialogsItems\":\"Dialogs_dialogsItems__2MP5c\",\"active\":\"Dialogs_active__2JXaG\",\"dialog\":\"Dialogs_dialog__2rAwh\",\"messages\":\"Dialogs_messages__3FRL3\",\"message\":\"Dialogs_message__3Tgg5\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\n\r\nexport default Message;\r\n","import {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nexport const AddMessageForm = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map((d) => (\r\n        <DialogItem name={d.name} key={d.id} id={d.id}/>\r\n    ));\r\n    let messagesElements = state.messages.map((m) => (\r\n        <Message message={m.message} key={m.id}/>\r\n    ));\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    if (props.isAuth === false) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>{dialogsElements}</div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {\r\n    sendMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}